Project MicroBank {
  database_type: "PostgreSQL"
  Note: '''
    # MicroBank Database
    **markdown content here**
  '''
}

Table users as U {
  username varchar [pk]
  hashed_password varchar [not null]
  full_name varchar [not null]
  email varchar [unique, not null]
  is_email_verified bool [not null, default: false]
  password_changed_at timestamptz [not null, default: '0001-01-01 00:00:00Z']
  created_at timestamptz [not null, default: `now()`]
}

Table verify_emails {
  id bigserial [pk]
  username varchar [ref: > U.username, not null]
  email varchar [not null]
  secret_code varchar [not null]
  is_used bool [not null, default: false]
  created_at timestamptz [not null, default: `now()`]
  expired_at timestamptz [not null, default: `now() + interval '15 minutes'`]
}

Table accounts as A {
  id bigserial [pk]
  owner varchar [not null]
  balance bigint [not null]
  currency varchar [not null]
  created_at timestamptz [not null, default: `now()`]
  
  Indexes {
    owner
    (owner, currency) [unique]
  }
}

Ref: A.owner > U.username [delete: cascade]

Table entries as E {
  id bigserial [pk]
  account_id bigint [not null]
  amount bigint [not null, note: 'can be negative or positive']
  created_at timestamptz [not null, default: `now()`]
  
  Indexes {
    account_id
  }
}

Ref: E.account_id > A.id [delete: cascade]

Table transfers as T {
  id bigserial [pk]
  from_account_id bigint [not null]
  to_account_id bigint [not null]
  amount bigint [not null, note: 'must be positive']
  created_at timestamptz [not null, default: `now()`]
  
  Indexes {
    from_account_id
    to_account_id
    (from_account_id, to_account_id)
  }
}

Ref: T.from_account_id > A.id [delete: cascade]
Ref: T.to_account_id > A.id [delete: cascade]
